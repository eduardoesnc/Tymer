{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eduardo\\\\Desktop\\\\Tymer\\\\Contador.js\";\nimport React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Audio } from 'expo-av';\nexport default function Contador(props) {\n  var done = false;\n  useEffect(function () {\n    var timer = setInterval(function () {\n      props.setarSegundos(props.segundos - 1);\n\n      if (props.segundos <= 0) {\n        if (props.minutos > 0) {\n          props.setarMinutos(minutos - 1);\n          props.setarSegundos(59);\n        } else {\n          if (!done) {\n            done = true;\n            props.setarEstado('selecionar');\n            props.setarMinutos(0);\n            props.setarSegundos(1);\n            playSound();\n          }\n        }\n      }\n    }, 1000);\n    return function () {\n      return clearInterval(timer);\n    };\n  });\n\n  function playSound() {\n    var sound, alarme;\n    return _regeneratorRuntime.async(function playSound$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            sound = new Audio.Sound();\n            _context.prev = 1;\n            props.alarmes.map(function (val) {\n              if (val.selecionado) {\n                alarme = val.file;\n              }\n            });\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(sound.loadAsync(alarme));\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 7:\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            alert('Erro1');\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  }\n\n  function resetar() {\n    props.setarEstado('selecionar');\n    props.setarMinutos(0);\n    props.setarSegundos(0);\n  }\n\n  function formatarNumero(number) {\n    var finalNumber = \"\";\n\n    if (number < 10) {\n      finalNumber = \"0\" + number;\n    } else {\n      finalNumber = number;\n    }\n\n    return finalNumber;\n  }\n\n  var segundos = formatarNumero(props.segundos);\n  var minutos = formatarNumero(props.minutos);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, \"Tymer, the timer\"), React.createElement(Image, {\n    style: styles.tymer,\n    source: require(\"./assets/tymerthecounter.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textContador,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, minutos, \" : \"), React.createElement(Text, {\n    style: styles.textContador,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, segundos)), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return resetar();\n    },\n    style: styles.btnIniciar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      alignSelf: 'center',\n      textAlign: 'center',\n      paddingTop: 32,\n      color: 'white',\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 75\n    }\n  }, \"Resetar\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'rgb(250, 180, 204)',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textContador: {\n    color: 'white',\n    fontSize: 40\n  },\n  btnIniciar: {\n    backgroundColor: 'rgb(88, 87, 88)',\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    marginTop: 30,\n    borderColor: 'white',\n    borderWidth: 2\n  },\n  tymer: {\n    width: 200,\n    height: 200,\n    position: 'relative',\n    top: -50\n  },\n  title: {\n    color: 'rgb(88, 87, 88)',\n    fontSize: 40,\n    position: 'relative',\n    top: -100\n  }\n});","map":{"version":3,"sources":["C:/Users/Eduardo/Desktop/Tymer/Contador.js"],"names":["React","useState","useEffect","StatusBar","Audio","Contador","props","done","timer","setInterval","setarSegundos","segundos","minutos","setarMinutos","setarEstado","playSound","clearInterval","sound","Sound","alarmes","map","val","selecionado","alarme","file","loadAsync","playAsync","alert","resetar","formatarNumero","number","finalNumber","styles","container","title","tymer","require","flexDirection","textContador","btnIniciar","alignSelf","textAlign","paddingTop","color","fontSize","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","borderRadius","marginTop","borderColor","borderWidth","position","top"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport {StyleSheet, Text, TouchableOpacity, View, Image} from 'react-native';\r\nimport { Audio } from 'expo-av';\r\n\r\nexport default function Contador(props) {\r\n\r\n  var done = false;\r\n\r\n  useEffect(()=>{\r\n\r\n    const timer = setInterval(()=>{\r\n\r\n      props.setarSegundos(props.segundos-1);\r\n\r\n      if(props.segundos <= 0){\r\n        if (props.minutos >0){\r\n          props.setarMinutos(minutos-1);\r\n          props.setarSegundos(59);\r\n        }else{\r\n          if(!done){\r\n            done = true;\r\n            props.setarEstado('selecionar');\r\n            props.setarMinutos(0);\r\n            props.setarSegundos(1);\r\n            playSound();\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n\r\n\r\n    }, 1000)\r\n\r\n    return () => clearInterval(timer);\r\n\r\n  })\r\n\r\n  async function playSound(){\r\n    const sound = new Audio.Sound();\r\n    try {\r\n      var alarme;\r\n      props.alarmes.map(function(val){\r\n        if(val.selecionado){\r\n          alarme = val.file;\r\n        }\r\n      })\r\n      await sound.loadAsync(alarme);\r\n      await sound.playAsync();\r\n      // Your sound is playing!\r\n\r\n      // Don't forget to unload the sound from memory\r\n      // when you are done using the Sound object\r\n      //await sound.unloadAsync();\r\n    } catch (error) {\r\n      alert('Erro1')\r\n    }\r\n\r\n  }\r\n\r\n  function resetar(){\r\n\r\n    props.setarEstado('selecionar');\r\n    props.setarMinutos(0);\r\n    props.setarSegundos(0);\r\n\r\n  }\r\n\r\n  function formatarNumero(number){\r\n    var finalNumber = \"\";\r\n    if(number < 10){\r\n      finalNumber = \"0\" + number;\r\n    }else{\r\n      finalNumber = number;\r\n    }\r\n    return finalNumber;\r\n  }\r\n\r\n  var segundos= formatarNumero(props.segundos);\r\n  var minutos = formatarNumero(props.minutos);\r\n  \r\n  return(\r\n    <View style={styles.container}>\r\n      <StatusBar style=\"auto\" />\r\n      <Text style={styles.title}>Tymer, the timer</Text>\r\n      <Image style={styles.tymer} source={require('./assets/tymerthecounter.png')} />\r\n      <View style={{flexDirection: 'row'}}>\r\n        <Text style={styles.textContador}>{minutos} : </Text>\r\n        <Text style={styles.textContador}>{segundos}</Text>\r\n      </View>\r\n      <TouchableOpacity onPress={()=>resetar()} style={styles.btnIniciar}><Text style={{alignSelf: 'center', textAlign: 'center', paddingTop: 32, color: 'white', fontSize:20}}>Resetar</Text></TouchableOpacity>\r\n    </View>\r\n        )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'rgb(250, 180, 204)',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  textContador:{\r\n    color: 'white',\r\n    fontSize: 40,\r\n  },\r\n  btnIniciar:{\r\n    backgroundColor: 'rgb(88, 87, 88)',\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 50,\r\n    marginTop: 30,\r\n    borderColor: 'white',\r\n    borderWidth: 2,\r\n  },\r\n  tymer:{\r\n    width: 200,\r\n    height: 200,\r\n    position: 'relative',\r\n    top: -50,\r\n    },\r\n  title: {\r\n    color: 'rgb(88, 87, 88)',\r\n    fontSize: 40,\r\n    position: 'relative',\r\n    top: -100,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}